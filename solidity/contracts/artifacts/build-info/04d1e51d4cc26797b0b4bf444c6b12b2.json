{
	"id": "04d1e51d4cc26797b0b4bf444c6b12b2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Auth.sol": {
				"content": "pragma solidity ^0.8.0;\r\n\r\ncontract Auth {\r\n    address private _administrator;\r\n\r\n    constructor(address deployer) {\r\n        // Make the deployer of the contract the administrator\r\n        _administrator = deployer;\r\n    }\r\n\r\n    function isAdministrator(address user) public view returns (bool) {\r\n        return user == _administrator;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Auth.sol": {
				"Auth": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "deployer",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "isAdministrator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Auth.sol\":27:350  contract Auth {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Auth.sol\":87:225  constructor(address deployer) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Auth.sol\":209:217  deployer */\n  dup1\n    /* \"contracts/Auth.sol\":192:206  _administrator */\n  0x00\n  dup1\n    /* \"contracts/Auth.sol\":192:217  _administrator = deployer */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Auth.sol\":87:225  constructor(address deployer) {\r... */\n  pop\n    /* \"contracts/Auth.sol\":27:350  contract Auth {\r... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:440   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:245   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":291:292   */\n  0x00\n    /* \"#utility.yul\":288:289   */\n  dup1\n    /* \"#utility.yul\":281:293   */\n  revert\n    /* \"#utility.yul\":243:245   */\ntag_13:\n    /* \"#utility.yul\":334:335   */\n  0x00\n    /* \"#utility.yul\":359:423   */\n  tag_14\n    /* \"#utility.yul\":415:422   */\n  dup5\n    /* \"#utility.yul\":406:412   */\n  dup3\n    /* \"#utility.yul\":395:404   */\n  dup6\n    /* \"#utility.yul\":391:413   */\n  add\n    /* \"#utility.yul\":359:423   */\n  tag_8\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":349:423   */\n  swap2\n  pop\n    /* \"#utility.yul\":305:433   */\n  pop\n    /* \"#utility.yul\":233:440   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":446:542   */\ntag_15:\n    /* \"#utility.yul\":483:490   */\n  0x00\n    /* \"#utility.yul\":512:536   */\n  tag_17\n    /* \"#utility.yul\":530:535   */\n  dup3\n    /* \"#utility.yul\":512:536   */\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":501:536   */\n  swap1\n  pop\n    /* \"#utility.yul\":491:542   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":548:674   */\ntag_18:\n    /* \"#utility.yul\":585:592   */\n  0x00\n    /* \"#utility.yul\":625:667   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":618:623   */\n  dup3\n    /* \"#utility.yul\":614:668   */\n  and\n    /* \"#utility.yul\":603:668   */\n  swap1\n  pop\n    /* \"#utility.yul\":593:674   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":680:802   */\ntag_11:\n    /* \"#utility.yul\":753:777   */\n  tag_21\n    /* \"#utility.yul\":771:776   */\n  dup2\n    /* \"#utility.yul\":753:777   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":746:751   */\n  dup2\n    /* \"#utility.yul\":743:778   */\n  eq\n    /* \"#utility.yul\":733:735   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":789:790   */\n  dup1\n    /* \"#utility.yul\":782:794   */\n  revert\n    /* \"#utility.yul\":733:735   */\ntag_22:\n    /* \"#utility.yul\":723:802   */\n  pop\n  jump\t// out\n    /* \"contracts/Auth.sol\":27:350  contract Auth {\r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Auth.sol\":27:350  contract Auth {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0a2eb301\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Auth.sol\":233:347  function isAdministrator(address user) public view returns (bool) {\r... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"contracts/Auth.sol\":293:297  bool */\n      0x00\n        /* \"contracts/Auth.sol\":325:339  _administrator */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auth.sol\":317:339  user == _administrator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auth.sol\":317:321  user */\n      dup3\n        /* \"contracts/Auth.sol\":317:339  user == _administrator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Auth.sol\":310:339  return user == _administrator */\n      swap1\n      pop\n        /* \"contracts/Auth.sol\":233:347  function isAdministrator(address user) public view returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_12:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_14\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_15\n      jump\t// in\n    tag_14:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:414   */\n    tag_6:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:230   */\n      iszero\n      tag_17\n      jumpi\n        /* \"#utility.yul\":276:277   */\n      0x00\n        /* \"#utility.yul\":273:274   */\n      dup1\n        /* \"#utility.yul\":266:278   */\n      revert\n        /* \"#utility.yul\":228:230   */\n    tag_17:\n        /* \"#utility.yul\":319:320   */\n      0x00\n        /* \"#utility.yul\":344:397   */\n      tag_18\n        /* \"#utility.yul\":389:396   */\n      dup5\n        /* \"#utility.yul\":380:386   */\n      dup3\n        /* \"#utility.yul\":369:378   */\n      dup6\n        /* \"#utility.yul\":365:387   */\n      add\n        /* \"#utility.yul\":344:397   */\n      tag_12\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":334:397   */\n      swap2\n      pop\n        /* \"#utility.yul\":290:407   */\n      pop\n        /* \"#utility.yul\":218:414   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":420:529   */\n    tag_19:\n        /* \"#utility.yul\":501:522   */\n      tag_21\n        /* \"#utility.yul\":516:521   */\n      dup2\n        /* \"#utility.yul\":501:522   */\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":496:499   */\n      dup3\n        /* \"#utility.yul\":489:523   */\n      mstore\n        /* \"#utility.yul\":479:529   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":535:745   */\n    tag_9:\n        /* \"#utility.yul\":622:626   */\n      0x00\n        /* \"#utility.yul\":660:662   */\n      0x20\n        /* \"#utility.yul\":649:658   */\n      dup3\n        /* \"#utility.yul\":645:663   */\n      add\n        /* \"#utility.yul\":637:663   */\n      swap1\n      pop\n        /* \"#utility.yul\":673:738   */\n      tag_24\n        /* \"#utility.yul\":735:736   */\n      0x00\n        /* \"#utility.yul\":724:733   */\n      dup4\n        /* \"#utility.yul\":720:737   */\n      add\n        /* \"#utility.yul\":711:717   */\n      dup5\n        /* \"#utility.yul\":673:738   */\n      tag_19\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":627:745   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":751:847   */\n    tag_25:\n        /* \"#utility.yul\":788:795   */\n      0x00\n        /* \"#utility.yul\":817:841   */\n      tag_27\n        /* \"#utility.yul\":835:840   */\n      dup3\n        /* \"#utility.yul\":817:841   */\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":806:841   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:847   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":853:943   */\n    tag_22:\n        /* \"#utility.yul\":887:894   */\n      0x00\n        /* \"#utility.yul\":930:935   */\n      dup2\n        /* \"#utility.yul\":923:936   */\n      iszero\n        /* \"#utility.yul\":916:937   */\n      iszero\n        /* \"#utility.yul\":905:937   */\n      swap1\n      pop\n        /* \"#utility.yul\":895:943   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":949:1075   */\n    tag_28:\n        /* \"#utility.yul\":986:993   */\n      0x00\n        /* \"#utility.yul\":1026:1068   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1019:1024   */\n      dup3\n        /* \"#utility.yul\":1015:1069   */\n      and\n        /* \"#utility.yul\":1004:1069   */\n      swap1\n      pop\n        /* \"#utility.yul\":994:1075   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1081:1203   */\n    tag_15:\n        /* \"#utility.yul\":1154:1178   */\n      tag_32\n        /* \"#utility.yul\":1172:1177   */\n      dup2\n        /* \"#utility.yul\":1154:1178   */\n      tag_25\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":1147:1152   */\n      dup2\n        /* \"#utility.yul\":1144:1179   */\n      eq\n        /* \"#utility.yul\":1134:1136   */\n      tag_33\n      jumpi\n        /* \"#utility.yul\":1193:1194   */\n      0x00\n        /* \"#utility.yul\":1190:1191   */\n      dup1\n        /* \"#utility.yul\":1183:1195   */\n      revert\n        /* \"#utility.yul\":1134:1136   */\n    tag_33:\n        /* \"#utility.yul\":1124:1203   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122063c5b91a44b08c49ebf02e7a32652f19b4457724a1281248ed743f241805bee364736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:805:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "7:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:207:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "288:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "291:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "281:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:1"
															},
															"nodeType": "YulIf",
															"src": "243:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "305:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "320:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "334:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "324:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "349:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "395:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "406:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "391:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "415:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "359:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "359:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "349:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:1",
														"type": ""
													}
												],
												"src": "156:284:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "491:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "501:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "530:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "512:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "512:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "501:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "473:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "483:7:1",
														"type": ""
													}
												],
												"src": "446:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "593:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "603:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "618:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "625:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "614:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "614:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "603:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "575:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "585:7:1",
														"type": ""
													}
												],
												"src": "548:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "723:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "780:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "789:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "792:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "782:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "782:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "782:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "746:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "753:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "753:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "743:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "743:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "736:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "736:43:1"
															},
															"nodeType": "YulIf",
															"src": "733:2:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "716:5:1",
														"type": ""
													}
												],
												"src": "680:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516102ba3803806102ba8339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b600081519050610087816100e8565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100c8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100f1816100b6565b81146100fc57600080fd5b50565b6101ac8061010e6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80630a2eb30114610030575b600080fd5b61004a600480360381019061004591906100ce565b610060565b6040516100579190610106565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6000813590506100c88161015f565b92915050565b6000602082840312156100e057600080fd5b60006100ee848285016100b9565b91505092915050565b61010081610133565b82525050565b600060208201905061011b60008301846100f7565b92915050565b600061012c8261013f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61016881610121565b811461017357600080fd5b5056fea264697066735822122063c5b91a44b08c49ebf02e7a32652f19b4457724a1281248ed743f241805bee364736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2BA CODESIZE SUB DUP1 PUSH2 0x2BA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x8D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0xFF JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x87 DUP2 PUSH2 0xE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAD DUP5 DUP3 DUP6 ADD PUSH2 0x78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1 DUP3 PUSH2 0xC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF1 DUP2 PUSH2 0xB6 JUMP JUMPDEST DUP2 EQ PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1AC DUP1 PUSH2 0x10E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA2EB301 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0xCE JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x106 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC8 DUP2 PUSH2 0x15F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEE DUP5 DUP3 DUP6 ADD PUSH2 0xB9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100 DUP2 PUSH2 0x133 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C DUP3 PUSH2 0x13F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x168 DUP2 PUSH2 0x121 JUMP JUMPDEST DUP2 EQ PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xC5B91A44 0xB0 DUP13 0x49 0xEB CREATE 0x2E PUSH27 0x32652F19B4457724A1281248ED743F241805BEE364736F6C634300 ADDMOD DIV STOP CALLER ",
							"sourceMap": "27:323:0:-:0;;;87:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;209:8;192:14;;:25;;;;;;;;;;;;;;;;;;87:138;27:323;;7:143:1;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;226:6;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:96::-;483:7;512:24;530:5;512:24;:::i;:::-;501:35;;491:51;;;:::o;548:126::-;585:7;625:42;618:5;614:54;603:65;;593:81;;;:::o;680:122::-;753:24;771:5;753:24;:::i;:::-;746:5;743:35;733:2;;792:1;789;782:12;733:2;723:79;:::o;27:323:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1206:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:196:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "273:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "276:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "266:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:1"
															},
															"nodeType": "YulIf",
															"src": "228:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "290:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "305:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "319:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "309:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "334:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "369:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "380:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "389:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "344:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "344:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "334:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													}
												],
												"src": "152:262:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "479:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "496:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "516:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "501:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "501:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "489:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "489:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "489:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "467:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "474:3:1",
														"type": ""
													}
												],
												"src": "420:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "627:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "637:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "649:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "660:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "645:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "637:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "711:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "724:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "735:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "720:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "720:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "673:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "673:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "673:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "599:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "611:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "622:4:1",
														"type": ""
													}
												],
												"src": "535:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "796:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "806:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "835:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "817:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "817:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "806:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "778:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "788:7:1",
														"type": ""
													}
												],
												"src": "751:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "895:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "905:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "930:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "923:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "923:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "916:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "916:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "905:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "877:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "887:7:1",
														"type": ""
													}
												],
												"src": "853:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "994:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1004:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1019:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1026:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1015:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1015:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1004:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "976:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "986:7:1",
														"type": ""
													}
												],
												"src": "949:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1124:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1181:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1190:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1193:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1183:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1183:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1183:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1147:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1172:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1154:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1154:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1144:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1144:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1137:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1137:43:1"
															},
															"nodeType": "YulIf",
															"src": "1134:2:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1117:5:1",
														"type": ""
													}
												],
												"src": "1081:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80630a2eb30114610030575b600080fd5b61004a600480360381019061004591906100ce565b610060565b6040516100579190610106565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6000813590506100c88161015f565b92915050565b6000602082840312156100e057600080fd5b60006100ee848285016100b9565b91505092915050565b61010081610133565b82525050565b600060208201905061011b60008301846100f7565b92915050565b600061012c8261013f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61016881610121565b811461017357600080fd5b5056fea264697066735822122063c5b91a44b08c49ebf02e7a32652f19b4457724a1281248ed743f241805bee364736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA2EB301 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0xCE JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x106 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC8 DUP2 PUSH2 0x15F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEE DUP5 DUP3 DUP6 ADD PUSH2 0xB9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100 DUP2 PUSH2 0x133 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C DUP3 PUSH2 0x13F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x168 DUP2 PUSH2 0x121 JUMP JUMPDEST DUP2 EQ PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xC5B91A44 0xB0 DUP13 0x49 0xEB CREATE 0x2E PUSH27 0x32652F19B4457724A1281248ED743F241805BEE364736F6C634300 ADDMOD DIV STOP CALLER ",
							"sourceMap": "27:323:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;233:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;293:4;325:14;;;;;;;;;;;317:22;;:4;:22;;;310:29;;233:114;;;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;211:6;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:109::-;501:21;516:5;501:21;:::i;:::-;496:3;489:34;479:50;;:::o;535:210::-;622:4;660:2;649:9;645:18;637:26;;673:65;735:1;724:9;720:17;711:6;673:65;:::i;:::-;627:118;;;;:::o;751:96::-;788:7;817:24;835:5;817:24;:::i;:::-;806:35;;796:51;;;:::o;853:90::-;887:7;930:5;923:13;916:21;905:32;;895:48;;;:::o;949:126::-;986:7;1026:42;1019:5;1015:54;1004:65;;994:81;;;:::o;1081:122::-;1154:24;1172:5;1154:24;:::i;:::-;1147:5;1144:35;1134:2;;1193:1;1190;1183:12;1134:2;1124:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "85600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"isAdministrator(address)": "1489"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 350,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27,
									"end": 350,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27,
									"end": 350,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 87,
									"end": 225,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 87,
									"end": 225,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 87,
									"end": 225,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 87,
									"end": 225,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 87,
									"end": 225,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 87,
									"end": 225,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 87,
									"end": 225,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 87,
									"end": 225,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 87,
									"end": 225,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 87,
									"end": 225,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 87,
									"end": 225,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 87,
									"end": 225,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 87,
									"end": 225,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 87,
									"end": 225,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 87,
									"end": 225,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 87,
									"end": 225,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 87,
									"end": 225,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 87,
									"end": 225,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 87,
									"end": 225,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 87,
									"end": 225,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 87,
									"end": 225,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 87,
									"end": 225,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 87,
									"end": 225,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 87,
									"end": 225,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 87,
									"end": 225,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 87,
									"end": 225,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 87,
									"end": 225,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 87,
									"end": 225,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 87,
									"end": 225,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 87,
									"end": 225,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 87,
									"end": 225,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 87,
									"end": 225,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 87,
									"end": 225,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 87,
									"end": 225,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 87,
									"end": 225,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 209,
									"end": 217,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 206,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 206,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 217,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 192,
									"end": 217,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 192,
									"end": 217,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 192,
									"end": 217,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 192,
									"end": 217,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 192,
									"end": 217,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 192,
									"end": 217,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 192,
									"end": 217,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 192,
									"end": 217,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 192,
									"end": 217,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 217,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 192,
									"end": 217,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 192,
									"end": 217,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 192,
									"end": 217,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 192,
									"end": 217,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 192,
									"end": 217,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 217,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 192,
									"end": 217,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 87,
									"end": 225,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 27,
									"end": 350,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 243,
									"end": 245,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 243,
									"end": 245,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 291,
									"end": 292,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 289,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 281,
									"end": 293,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 243,
									"end": 245,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 334,
									"end": 335,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 415,
									"end": 422,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 406,
									"end": 412,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 395,
									"end": 404,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 391,
									"end": 413,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 349,
									"end": 423,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 349,
									"end": 423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 305,
									"end": 433,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 446,
									"end": 542,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 446,
									"end": 542,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 483,
									"end": 490,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 530,
									"end": 535,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 512,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 501,
									"end": 536,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 501,
									"end": 536,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 491,
									"end": 542,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 491,
									"end": 542,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 491,
									"end": 542,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 491,
									"end": 542,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 548,
									"end": 674,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 548,
									"end": 674,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 585,
									"end": 592,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 625,
									"end": 667,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 618,
									"end": 623,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 614,
									"end": 668,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 603,
									"end": 668,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 603,
									"end": 668,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 593,
									"end": 674,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 593,
									"end": 674,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 593,
									"end": 674,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 593,
									"end": 674,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 680,
									"end": 802,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 680,
									"end": 802,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 777,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 771,
									"end": 776,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 753,
									"end": 777,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 746,
									"end": 751,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 743,
									"end": 778,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 733,
									"end": 735,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 733,
									"end": 735,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 789,
									"end": 790,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 782,
									"end": 794,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 733,
									"end": 735,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 733,
									"end": 735,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 723,
									"end": 802,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 723,
									"end": 802,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 27,
									"end": 350,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 27,
									"end": 350,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27,
									"end": 350,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 350,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 350,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 350,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 350,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27,
									"end": 350,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 350,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122063c5b91a44b08c49ebf02e7a32652f19b4457724a1281248ed743f241805bee364736f6c63430008040033",
									".code": [
										{
											"begin": 27,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 350,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 350,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27,
											"end": 350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 350,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27,
											"end": 350,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27,
											"end": 350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27,
											"end": 350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27,
											"end": 350,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 350,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27,
											"end": 350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 350,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 27,
											"end": 350,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 27,
											"end": 350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "A2EB301"
										},
										{
											"begin": 27,
											"end": 350,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 27,
											"end": 350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27,
											"end": 350,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27,
											"end": 350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 350,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 233,
											"end": 347,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 233,
											"end": 347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 233,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 233,
											"end": 347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 347,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 233,
											"end": 347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 233,
											"end": 347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 233,
											"end": 347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 233,
											"end": 347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 233,
											"end": 347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 233,
											"end": 347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 233,
											"end": 347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 233,
											"end": 347,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 233,
											"end": 347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 233,
											"end": 347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 233,
											"end": 347,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 233,
											"end": 347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 233,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 233,
											"end": 347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 233,
											"end": 347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 233,
											"end": 347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 233,
											"end": 347,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 233,
											"end": 347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 233,
											"end": 347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 233,
											"end": 347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 233,
											"end": 347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 347,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 233,
											"end": 347,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 233,
											"end": 347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 293,
											"end": 297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 325,
											"end": 339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 325,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 325,
											"end": 339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 325,
											"end": 339,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 325,
											"end": 339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 325,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 325,
											"end": 339,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 325,
											"end": 339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 325,
											"end": 339,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 325,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 325,
											"end": 339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 317,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 317,
											"end": 339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 317,
											"end": 321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 317,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 317,
											"end": 339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 317,
											"end": 339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 310,
											"end": 339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 310,
											"end": 339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 233,
											"end": 347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 347,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 414,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 152,
											"end": 414,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 230,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 228,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 228,
											"end": 230,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 276,
											"end": 277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 266,
											"end": 278,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 230,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 228,
											"end": 230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 319,
											"end": 320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 380,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 378,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 365,
											"end": 387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 344,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 334,
											"end": 397,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 290,
											"end": 407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 414,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 414,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 218,
											"end": 414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 414,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 420,
											"end": 529,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 420,
											"end": 529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 501,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 516,
											"end": 521,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 501,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 501,
											"end": 522,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 501,
											"end": 522,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 501,
											"end": 522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 496,
											"end": 499,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 489,
											"end": 523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 479,
											"end": 529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 479,
											"end": 529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 479,
											"end": 529,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 535,
											"end": 745,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 535,
											"end": 745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 622,
											"end": 626,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 662,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 658,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 645,
											"end": 663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 637,
											"end": 663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 637,
											"end": 663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 673,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 735,
											"end": 736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 733,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 720,
											"end": 737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 711,
											"end": 717,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 673,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 673,
											"end": 738,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 673,
											"end": 738,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 673,
											"end": 738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 627,
											"end": 745,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 627,
											"end": 745,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 627,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 627,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 627,
											"end": 745,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 751,
											"end": 847,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 751,
											"end": 847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 788,
											"end": 795,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 817,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 817,
											"end": 841,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 817,
											"end": 841,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 817,
											"end": 841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 806,
											"end": 841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 806,
											"end": 841,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 847,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 796,
											"end": 847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 847,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 853,
											"end": 943,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 853,
											"end": 943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 887,
											"end": 894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 935,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 923,
											"end": 936,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 916,
											"end": 937,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 905,
											"end": 937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 905,
											"end": 937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 943,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 895,
											"end": 943,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 895,
											"end": 943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 943,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 949,
											"end": 1075,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 949,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 986,
											"end": 993,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1068,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1019,
											"end": 1024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1069,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1069,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1069,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 994,
											"end": 1075,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 994,
											"end": 1075,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 994,
											"end": 1075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 994,
											"end": 1075,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1081,
											"end": 1203,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1081,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1172,
											"end": 1177,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1154,
											"end": 1178,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1154,
											"end": 1178,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1154,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1152,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1179,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1134,
											"end": 1136,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1194,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1191,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1195,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1136,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1134,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1124,
											"end": 1203,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1124,
											"end": 1203,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"isAdministrator(address)": "0a2eb301"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isAdministrator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Auth.sol\":\"Auth\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Auth.sol\":{\"keccak256\":\"0xed94a6aa5a85a8a7fe001df5f7a6d9252c57fb7176b906f83f755c7c5b3735db\",\"urls\":[\"bzz-raw://47b2d9c82e83e2544e627615fdd471af3792241e27f8c23d529cf5554e69f76e\",\"dweb:/ipfs/QmS76te5yGQiPQE9pVsUoo4ZVtawLNBp72cHmcGvih8P1y\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Auth.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Auth.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Auth.sol": {
				"ast": {
					"absolutePath": "contracts/Auth.sol",
					"exportedSymbols": {
						"Auth": [
							26
						]
					},
					"id": 27,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 26,
							"linearizedBaseContracts": [
								26
							],
							"name": "Auth",
							"nameLocation": "36:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "_administrator",
									"nameLocation": "64:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 26,
									"src": "48:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "48:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 12,
										"nodeType": "Block",
										"src": "117:108:0",
										"statements": [
											{
												"expression": {
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 8,
														"name": "_administrator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "192:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 9,
														"name": "deployer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "209:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "192:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 11,
												"nodeType": "ExpressionStatement",
												"src": "192:25:0"
											}
										]
									},
									"id": 13,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "107:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "99:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "99:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "98:18:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "117:0:0"
									},
									"scope": 26,
									"src": "87:138:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "299:48:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 20,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "317:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 21,
														"name": "_administrator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "325:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "317:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 19,
												"id": 23,
												"nodeType": "Return",
												"src": "310:29:0"
											}
										]
									},
									"functionSelector": "0a2eb301",
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAdministrator",
									"nameLocation": "242:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "266:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "258:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "257:14:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "293:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "293:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "292:6:0"
									},
									"scope": 26,
									"src": "233:114:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 27,
							"src": "27:323:0",
							"usedErrors": []
						}
					],
					"src": "0:350:0"
				},
				"id": 0
			}
		}
	}
}