{
	"id": "39cde39afe126b7f9b45dd1a7579cf27",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.3;\n\ncontract Loop {\n    uint public count;\n    function loop() public{\n        // for loop\n        for (uint i = 0; i < 10; i++) {\n            if (i == 5) {\n                // Skip to next iteration with continue\n                continue;\n            }\n            if (i == 5) {\n                // Exit loop with break\n                break;\n            }\n            count++;\n        }\n\n        // while loop\n        uint j;\n        while (j < 10) {\n            j++;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol": {
				"Loop": {
					"abi": [
						{
							"inputs": [],
							"name": "count",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "loop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":57:538  contract Loop {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":57:538  contract Loop {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x06661abd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa92100cb\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":77:94  uint public count */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":100:536  function loop() public{... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":77:94  uint public count */\n    tag_6:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":100:536  function loop() public{... */\n    tag_10:\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":157:163  uint i */\n      0x00\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":152:439  for (uint i = 0; i < 10; i++) {... */\n    tag_12:\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":173:175  10 */\n      0x0a\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":169:170  i */\n      dup2\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":169:175  i < 10 */\n      lt\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":152:439  for (uint i = 0; i < 10; i++) {... */\n      iszero\n      tag_13\n      jumpi\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":205:206  5 */\n      0x05\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":200:201  i */\n      dup2\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":200:206  i == 5 */\n      eq\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":196:305  if (i == 5) {... */\n      iszero\n      tag_15\n      jumpi\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":282:290  continue */\n      jump(tag_14)\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":196:305  if (i == 5) {... */\n    tag_15:\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":327:328  5 */\n      0x05\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":322:323  i */\n      dup2\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":322:328  i == 5 */\n      eq\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":318:408  if (i == 5) {... */\n      iszero\n      tag_16\n      jumpi\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":388:393  break */\n      jump(tag_13)\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":318:408  if (i == 5) {... */\n    tag_16:\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":421:426  count */\n      0x00\n      dup1\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":421:428  count++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_17\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":152:439  for (uint i = 0; i < 10; i++) {... */\n    tag_14:\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":177:180  i++ */\n      dup1\n      dup1\n      tag_19\n      swap1\n      tag_18\n      jump\t// in\n    tag_19:\n      swap2\n      pop\n      pop\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":152:439  for (uint i = 0; i < 10; i++) {... */\n      jump(tag_12)\n    tag_13:\n      pop\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":471:477  uint j */\n      0x00\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":487:530  while (j < 10) {... */\n    tag_20:\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":498:500  10 */\n      0x0a\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":494:495  j */\n      dup2\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":494:500  j < 10 */\n      lt\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":487:530  while (j < 10) {... */\n      iszero\n      tag_21\n      jumpi\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":516:519  j++ */\n      dup1\n      dup1\n      tag_22\n      swap1\n      tag_18\n      jump\t// in\n    tag_22:\n      swap2\n      pop\n      pop\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":487:530  while (j < 10) {... */\n      jump(tag_20)\n    tag_21:\n        /* \".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":100:536  function loop() public{... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:125   */\n    tag_24:\n        /* \"#utility.yul\":94:118   */\n      tag_26\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":72:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":131:353   */\n    tag_8:\n        /* \"#utility.yul\":224:228   */\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":251:260   */\n      dup3\n        /* \"#utility.yul\":247:265   */\n      add\n        /* \"#utility.yul\":239:265   */\n      swap1\n      pop\n        /* \"#utility.yul\":275:346   */\n      tag_29\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":332:341   */\n      dup4\n        /* \"#utility.yul\":328:345   */\n      add\n        /* \"#utility.yul\":319:325   */\n      dup5\n        /* \"#utility.yul\":275:346   */\n      tag_24\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":229:353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":359:436   */\n    tag_27:\n        /* \"#utility.yul\":396:403   */\n      0x00\n        /* \"#utility.yul\":425:430   */\n      dup2\n        /* \"#utility.yul\":414:430   */\n      swap1\n      pop\n        /* \"#utility.yul\":404:436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:675   */\n    tag_18:\n        /* \"#utility.yul\":481:484   */\n      0x00\n        /* \"#utility.yul\":504:528   */\n      tag_32\n        /* \"#utility.yul\":522:527   */\n      dup3\n        /* \"#utility.yul\":504:528   */\n      tag_27\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":495:528   */\n      swap2\n      pop\n        /* \"#utility.yul\":550:616   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":543:548   */\n      dup3\n        /* \"#utility.yul\":540:617   */\n      eq\n        /* \"#utility.yul\":537:539   */\n      iszero\n      tag_33\n      jumpi\n        /* \"#utility.yul\":620:638   */\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":537:539   */\n    tag_33:\n        /* \"#utility.yul\":667:668   */\n      0x01\n        /* \"#utility.yul\":660:665   */\n      dup3\n        /* \"#utility.yul\":656:669   */\n      add\n        /* \"#utility.yul\":649:669   */\n      swap1\n      pop\n        /* \"#utility.yul\":485:675   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":681:861   */\n    tag_35:\n        /* \"#utility.yul\":729:806   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":726:727   */\n      0x00\n        /* \"#utility.yul\":719:807   */\n      mstore\n        /* \"#utility.yul\":826:830   */\n      0x11\n        /* \"#utility.yul\":823:824   */\n      0x04\n        /* \"#utility.yul\":816:831   */\n      mstore\n        /* \"#utility.yul\":850:854   */\n      0x24\n        /* \"#utility.yul\":847:848   */\n      0x00\n        /* \"#utility.yul\":840:855   */\n      revert\n\n    auxdata: 0xa26469706673582212206c5d3a3405066d23c561031851ba6a2926ad0997f2bb86ffd7158c97d598b8d464736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101c1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806306661abd1461003b578063a92100cb14610059575b600080fd5b610043610063565b60405161005091906100ee565b60405180910390f35b610061610069565b005b60005481565b60005b600a8110156100bc576005811415610083576100a9565b6005811415610091576100bc565b6000808154809291906100a390610113565b91905055505b80806100b490610113565b91505061006c565b5060005b600a8110156100dc5780806100d490610113565b9150506100c0565b50565b6100e881610109565b82525050565b600060208201905061010360008301846100df565b92915050565b6000819050919050565b600061011e82610109565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156101515761015061015c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212206c5d3a3405066d23c561031851ba6a2926ad0997f2bb86ffd7158c97d598b8d464736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6661ABD EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xA92100CB EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x69 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0xBC JUMPI PUSH1 0x5 DUP2 EQ ISZERO PUSH2 0x83 JUMPI PUSH2 0xA9 JUMP JUMPDEST PUSH1 0x5 DUP2 EQ ISZERO PUSH2 0x91 JUMPI PUSH2 0xBC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xA3 SWAP1 PUSH2 0x113 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST DUP1 DUP1 PUSH2 0xB4 SWAP1 PUSH2 0x113 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6C JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0xDC JUMPI DUP1 DUP1 PUSH2 0xD4 SWAP1 PUSH2 0x113 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE8 DUP2 PUSH2 0x109 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x103 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E DUP3 PUSH2 0x109 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x151 JUMPI PUSH2 0x150 PUSH2 0x15C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x5D3A3405066D23C561031851BA PUSH11 0x2926AD0997F2BB86FFD715 DUP13 SWAP8 0xD5 SWAP9 0xB8 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "57:481:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:864:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:1",
														"type": ""
													}
												],
												"src": "7:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "229:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "239:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "251:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "239:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "319:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "332:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "343:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "275:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "275:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "201:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "213:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "224:4:1",
														"type": ""
													}
												],
												"src": "131:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "404:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "414:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "425:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "414:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "386:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "396:7:1",
														"type": ""
													}
												],
												"src": "359:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "485:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "495:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "522:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "504:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "504:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "495:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "618:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "620:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "620:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "620:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "543:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "550:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "540:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:77:1"
															},
															"nodeType": "YulIf",
															"src": "537:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "649:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "660:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "667:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "656:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "656:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "649:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "471:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "481:3:1",
														"type": ""
													}
												],
												"src": "442:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "709:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "726:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "729:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "719:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "719:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "719:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "823:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "826:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "816:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "816:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "816:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "847:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "850:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "840:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "840:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "840:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "681:180:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806306661abd1461003b578063a92100cb14610059575b600080fd5b610043610063565b60405161005091906100ee565b60405180910390f35b610061610069565b005b60005481565b60005b600a8110156100bc576005811415610083576100a9565b6005811415610091576100bc565b6000808154809291906100a390610113565b91905055505b80806100b490610113565b91505061006c565b5060005b600a8110156100dc5780806100d490610113565b9150506100c0565b50565b6100e881610109565b82525050565b600060208201905061010360008301846100df565b92915050565b6000819050919050565b600061011e82610109565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156101515761015061015c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212206c5d3a3405066d23c561031851ba6a2926ad0997f2bb86ffd7158c97d598b8d464736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6661ABD EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xA92100CB EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x69 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0xBC JUMPI PUSH1 0x5 DUP2 EQ ISZERO PUSH2 0x83 JUMPI PUSH2 0xA9 JUMP JUMPDEST PUSH1 0x5 DUP2 EQ ISZERO PUSH2 0x91 JUMPI PUSH2 0xBC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xA3 SWAP1 PUSH2 0x113 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST DUP1 DUP1 PUSH2 0xB4 SWAP1 PUSH2 0x113 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6C JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0xDC JUMPI DUP1 DUP1 PUSH2 0xD4 SWAP1 PUSH2 0x113 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE8 DUP2 PUSH2 0x109 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x103 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E DUP3 PUSH2 0x109 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x151 JUMPI PUSH2 0x150 PUSH2 0x15C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x5D3A3405066D23C561031851BA PUSH11 0x2926AD0997F2BB86FFD715 DUP13 SWAP8 0xD5 SWAP9 0xB8 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "57:481:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;77:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;100:436;;;:::i;:::-;;77:17;;;;:::o;100:436::-;157:6;152:287;173:2;169:1;:6;152:287;;;205:1;200;:6;196:109;;;282:8;;196:109;327:1;322;:6;318:90;;;388:5;;318:90;421:5;;:7;;;;;;;;;:::i;:::-;;;;;;152:287;177:3;;;;;:::i;:::-;;;;152:287;;;;471:6;487:43;498:2;494:1;:6;487:43;;;516:3;;;;;:::i;:::-;;;;487:43;;;100:436;:::o;7:118:1:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;72:53;;:::o;131:222::-;224:4;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;229:124;;;;:::o;359:77::-;396:7;425:5;414:16;;404:32;;;:::o;442:233::-;481:3;504:24;522:5;504:24;:::i;:::-;495:33;;550:66;543:5;540:77;537:2;;;620:18;;:::i;:::-;537:2;667:1;660:5;656:13;649:20;;485:190;;;:::o;681:180::-;729:77;726:1;719:88;826:4;823:1;816:15;850:4;847:1;840:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "89800",
								"executionCost": "141",
								"totalCost": "89941"
							},
							"external": {
								"count()": "1107",
								"loop()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 538,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 538,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 538,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 538,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 538,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 538,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57,
									"end": 538,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 538,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57,
									"end": 538,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 538,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 538,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57,
									"end": 538,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 538,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 538,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 538,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 538,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 538,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 538,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 538,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 538,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 538,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206c5d3a3405066d23c561031851ba6a2926ad0997f2bb86ffd7158c97d598b8d464736f6c63430008040033",
									".code": [
										{
											"begin": 57,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 538,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 538,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 538,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 538,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 538,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 538,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 538,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 538,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "6661ABD"
										},
										{
											"begin": 57,
											"end": 538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "A92100CB"
										},
										{
											"begin": 57,
											"end": 538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 538,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 538,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 77,
											"end": 94,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 77,
											"end": 94,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77,
											"end": 94,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 77,
											"end": 94,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 77,
											"end": 94,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 77,
											"end": 94,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 77,
											"end": 94,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77,
											"end": 94,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77,
											"end": 94,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77,
											"end": 94,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 77,
											"end": 94,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77,
											"end": 94,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77,
											"end": 94,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 77,
											"end": 94,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 77,
											"end": 94,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 77,
											"end": 94,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77,
											"end": 94,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77,
											"end": 94,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77,
											"end": 94,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77,
											"end": 94,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77,
											"end": 94,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 77,
											"end": 94,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77,
											"end": 94,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 100,
											"end": 536,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 100,
											"end": 536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 100,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 100,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 100,
											"end": 536,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 100,
											"end": 536,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 100,
											"end": 536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 100,
											"end": 536,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 77,
											"end": 94,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 77,
											"end": 94,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77,
											"end": 94,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77,
											"end": 94,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 77,
											"end": 94,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77,
											"end": 94,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 100,
											"end": 536,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 100,
											"end": 536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 157,
											"end": 163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 152,
											"end": 439,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 152,
											"end": 439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 173,
											"end": 175,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 169,
											"end": 170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 169,
											"end": 175,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 152,
											"end": 439,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 152,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 152,
											"end": 439,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 205,
											"end": 206,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 200,
											"end": 201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 200,
											"end": 206,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 196,
											"end": 305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 196,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 196,
											"end": 305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 282,
											"end": 290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 282,
											"end": 290,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 196,
											"end": 305,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 196,
											"end": 305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 327,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 322,
											"end": 323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 322,
											"end": 328,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 318,
											"end": 408,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 318,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 318,
											"end": 408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 388,
											"end": 393,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 318,
											"end": 408,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 318,
											"end": 408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 421,
											"end": 426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 421,
											"end": 428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 421,
											"end": 428,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 421,
											"end": 428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 421,
											"end": 428,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 421,
											"end": 428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 421,
											"end": 428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 421,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 421,
											"end": 428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 421,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 421,
											"end": 428,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 421,
											"end": 428,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 421,
											"end": 428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 421,
											"end": 428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 421,
											"end": 428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 421,
											"end": 428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 421,
											"end": 428,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 421,
											"end": 428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 152,
											"end": 439,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 152,
											"end": 439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 177,
											"end": 180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 177,
											"end": 180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 177,
											"end": 180,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 177,
											"end": 180,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 177,
											"end": 180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 177,
											"end": 180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 177,
											"end": 180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 177,
											"end": 180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 152,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 152,
											"end": 439,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 152,
											"end": 439,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 152,
											"end": 439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 152,
											"end": 439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 471,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 530,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 487,
											"end": 530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 498,
											"end": 500,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 494,
											"end": 495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 494,
											"end": 500,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 487,
											"end": 530,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 487,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 487,
											"end": 530,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 516,
											"end": 519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 516,
											"end": 519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 516,
											"end": 519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 516,
											"end": 519,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 516,
											"end": 519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 516,
											"end": 519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 516,
											"end": 519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 516,
											"end": 519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 487,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 487,
											"end": 530,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 487,
											"end": 530,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 487,
											"end": 530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 100,
											"end": 536,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 100,
											"end": 536,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 72,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 72,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 72,
											"end": 125,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 224,
											"end": 228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 251,
											"end": 260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 247,
											"end": 265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 239,
											"end": 265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 239,
											"end": 265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 328,
											"end": 345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 229,
											"end": 353,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 229,
											"end": 353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 229,
											"end": 353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 229,
											"end": 353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 229,
											"end": 353,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 396,
											"end": 403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 414,
											"end": 430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 414,
											"end": 430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 404,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 404,
											"end": 436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 404,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 404,
											"end": 436,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 442,
											"end": 675,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 442,
											"end": 675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 481,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 504,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 522,
											"end": 527,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 504,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 504,
											"end": 528,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 504,
											"end": 528,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 504,
											"end": 528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 495,
											"end": 528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 495,
											"end": 528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 550,
											"end": 616,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 543,
											"end": 548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 540,
											"end": 617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 537,
											"end": 539,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 537,
											"end": 539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 620,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 620,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 620,
											"end": 638,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 620,
											"end": 638,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 620,
											"end": 638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 537,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 537,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 667,
											"end": 668,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 656,
											"end": 669,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 649,
											"end": 669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 649,
											"end": 669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 485,
											"end": 675,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 485,
											"end": 675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 485,
											"end": 675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 485,
											"end": 675,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 681,
											"end": 861,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 681,
											"end": 861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 729,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 726,
											"end": 727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 807,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 826,
											"end": 830,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 816,
											"end": 831,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 850,
											"end": 854,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 847,
											"end": 848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 840,
											"end": 855,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"count()": "06661abd",
							"loop()": "a92100cb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"loop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":\"Loop\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol\":{\"keccak256\":\"0x9843f09bfe3b15f012a6c0e1b3c54fc7f93868aa5d66f50e9c9111b542b78ead\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9457022e048dbcfdb0832ef2eabbcd93c26fc4035e4af373a8128e8f6458a3f6\",\"dweb:/ipfs/QmeTQ3yUt9FJr2QeyC2VgmeBj2ZmbVXypxaF5m3nabkRq5\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol": {
				"ast": {
					"absolutePath": ".learneth/Solidity Beginner Course/7.2 Control Flow - Loops/loops_answer.sol",
					"exportedSymbols": {
						"Loop": [
							46
						]
					},
					"id": 47,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".3"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 46,
							"linearizedBaseContracts": [
								46
							],
							"name": "Loop",
							"nameLocation": "66:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "06661abd",
									"id": 3,
									"mutability": "mutable",
									"name": "count",
									"nameLocation": "89:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 46,
									"src": "77:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "77:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "122:414:0",
										"statements": [
											{
												"body": {
													"id": 31,
													"nodeType": "Block",
													"src": "182:257:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 16,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "200:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 17,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "205:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "200:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 21,
															"nodeType": "IfStatement",
															"src": "196:109:0",
															"trueBody": {
																"id": 20,
																"nodeType": "Block",
																"src": "208:97:0",
																"statements": [
																	{
																		"id": 19,
																		"nodeType": "Continue",
																		"src": "282:8:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 22,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "322:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 23,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "327:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "322:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 27,
															"nodeType": "IfStatement",
															"src": "318:90:0",
															"trueBody": {
																"id": 26,
																"nodeType": "Block",
																"src": "330:78:0",
																"statements": [
																	{
																		"id": 25,
																		"nodeType": "Break",
																		"src": "388:5:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "421:7:0",
																"subExpression": {
																	"id": 28,
																	"name": "count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "421:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 30,
															"nodeType": "ExpressionStatement",
															"src": "421:7:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 10,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "169:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "173:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "169:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 32,
												"initializationExpression": {
													"assignments": [
														7
													],
													"declarations": [
														{
															"constant": false,
															"id": 7,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "162:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 32,
															"src": "157:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 6,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "157:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 9,
													"initialValue": {
														"hexValue": "30",
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "166:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "157:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "177:3:0",
														"subExpression": {
															"id": 13,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "177:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 15,
													"nodeType": "ExpressionStatement",
													"src": "177:3:0"
												},
												"nodeType": "ForStatement",
												"src": "152:287:0"
											},
											{
												"assignments": [
													34
												],
												"declarations": [
													{
														"constant": false,
														"id": 34,
														"mutability": "mutable",
														"name": "j",
														"nameLocation": "476:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 44,
														"src": "471:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 33,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "471:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 35,
												"nodeType": "VariableDeclarationStatement",
												"src": "471:6:0"
											},
											{
												"body": {
													"id": 42,
													"nodeType": "Block",
													"src": "502:28:0",
													"statements": [
														{
															"expression": {
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "516:3:0",
																"subExpression": {
																	"id": 39,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "516:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 41,
															"nodeType": "ExpressionStatement",
															"src": "516:3:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 36,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "494:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "498:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "494:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 43,
												"nodeType": "WhileStatement",
												"src": "487:43:0"
											}
										]
									},
									"functionSelector": "a92100cb",
									"id": 45,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "loop",
									"nameLocation": "109:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "113:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "122:0:0"
									},
									"scope": 46,
									"src": "100:436:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 47,
							"src": "57:481:0",
							"usedErrors": []
						}
					],
					"src": "32:507:0"
				},
				"id": 0
			}
		}
	}
}