{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"g√∂rli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"generatedSources": [],
			"linkReferences": {},
			"object": "608060405260008060006101000a81548160ff021916908360ff16021790555060008060016101000a81548160ff021916908360ff16021790555060008060026101000a81548160ff021916908360ff16021790555034801561006157600080fd5b5061012f806100716000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c806310cd83c014604157806333d1c2fc14605b57806336f4a006146075575b600080fd5b6047608f565b6040516052919060d3565b60405180910390f35b606160a0565b604051606c919060d3565b60405180910390f35b607b60b3565b6040516086919060d3565b60405180910390f35b60008054906101000a900460ff1681565b600060019054906101000a900460ff1681565b600060029054906101000a900460ff1681565b60cd8160ec565b82525050565b600060208201905060e6600083018460c6565b92915050565b600060ff8216905091905056fea264697066735822122086e8737a4e3fdc8938054da562a4c50f976a831d2ba22804c181b57d36adc2be64736f6c63430008040033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F DUP1 PUSH2 0x71 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10CD83C0 EQ PUSH1 0x41 JUMPI DUP1 PUSH4 0x33D1C2FC EQ PUSH1 0x5B JUMPI DUP1 PUSH4 0x36F4A006 EQ PUSH1 0x75 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x47 PUSH1 0x8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x52 SWAP2 SWAP1 PUSH1 0xD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x61 PUSH1 0xA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x6C SWAP2 SWAP1 PUSH1 0xD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x7B PUSH1 0xB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x86 SWAP2 SWAP1 PUSH1 0xD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xCD DUP2 PUSH1 0xEC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xE6 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0xC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xE8 PUSH20 0x7A4E3FDC8938054DA562A4C50F976A831D2BA228 DIV 0xC1 DUP2 0xB5 PUSH30 0x36ADC2BE64736F6C63430008040033000000000000000000000000000000 ",
			"sourceMap": "57:113:0:-:0;;;102:1;77:26;;;;;;;;;;;;;;;;;;;;134:1;109:26;;;;;;;;;;;;;;;;;;;;166:1;141:26;;;;;;;;;;;;;;;;;;;;57:113;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:434:1",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "68:51:1",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "85:3:1"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "106:5:1"
															}
														],
														"functionName": {
															"name": "cleanup_t_uint8",
															"nodeType": "YulIdentifier",
															"src": "90:15:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "90:22:1"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "78:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "78:35:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "78:35:1"
										}
									]
								},
								"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "56:5:1",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "63:3:1",
										"type": ""
									}
								],
								"src": "7:112:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "219:120:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "229:26:1",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "241:9:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "252:2:1",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "237:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "237:18:1"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "229:4:1"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "305:6:1"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "318:9:1"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "329:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "314:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "314:17:1"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
													"nodeType": "YulIdentifier",
													"src": "265:39:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "265:67:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "265:67:1"
										}
									]
								},
								"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "191:9:1",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "203:6:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "214:4:1",
										"type": ""
									}
								],
								"src": "125:214:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "388:43:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "398:27:1",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "413:5:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "420:4:1",
														"type": "",
														"value": "0xff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "409:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "409:16:1"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "398:7:1"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint8",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "370:5:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "380:7:1",
										"type": ""
									}
								],
								"src": "345:86:1"
							}
						]
					},
					"contents": "{\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n}\n",
					"id": 1,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "6080604052348015600f57600080fd5b5060043610603c5760003560e01c806310cd83c014604157806333d1c2fc14605b57806336f4a006146075575b600080fd5b6047608f565b6040516052919060d3565b60405180910390f35b606160a0565b604051606c919060d3565b60405180910390f35b607b60b3565b6040516086919060d3565b60405180910390f35b60008054906101000a900460ff1681565b600060019054906101000a900460ff1681565b600060029054906101000a900460ff1681565b60cd8160ec565b82525050565b600060208201905060e6600083018460c6565b92915050565b600060ff8216905091905056fea264697066735822122086e8737a4e3fdc8938054da562a4c50f976a831d2ba22804c181b57d36adc2be64736f6c63430008040033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10CD83C0 EQ PUSH1 0x41 JUMPI DUP1 PUSH4 0x33D1C2FC EQ PUSH1 0x5B JUMPI DUP1 PUSH4 0x36F4A006 EQ PUSH1 0x75 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x47 PUSH1 0x8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x52 SWAP2 SWAP1 PUSH1 0xD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x61 PUSH1 0xA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x6C SWAP2 SWAP1 PUSH1 0xD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x7B PUSH1 0xB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x86 SWAP2 SWAP1 PUSH1 0xD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xCD DUP2 PUSH1 0xEC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xE6 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0xC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xE8 PUSH20 0x7A4E3FDC8938054DA562A4C50F976A831D2BA228 DIV 0xC1 DUP2 0xB5 PUSH30 0x36ADC2BE64736F6C63430008040033000000000000000000000000000000 ",
			"sourceMap": "57:113:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;77:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;109;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;141;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;77;;;;;;;;;;;;:::o;109:::-;;;;;;;;;;;;;:::o;141:::-;;;;;;;;;;;;;:::o;7:112:1:-;90:22;106:5;90:22;:::i;:::-;85:3;78:35;68:51;;:::o;125:214::-;214:4;252:2;241:9;237:18;229:26;;265:67;329:1;318:9;314:17;305:6;265:67;:::i;:::-;219:120;;;;:::o;345:86::-;380:7;420:4;413:5;409:16;398:27;;388:43;;;:::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "60600",
				"executionCost": "62812",
				"totalCost": "123412"
			},
			"external": {
				"question1()": "1146",
				"question2()": "1221",
				"question3()": "1243"
			}
		},
		"methodIdentifiers": {
			"question1()": "10cd83c0",
			"question2()": "33d1c2fc",
			"question3()": "36f4a006"
		}
	},
	"abi": [
		{
			"inputs": [],
			"name": "question1",
			"outputs": [
				{
					"internalType": "uint8",
					"name": "",
					"type": "uint8"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "question2",
			"outputs": [
				{
					"internalType": "uint8",
					"name": "",
					"type": "uint8"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "question3",
			"outputs": [
				{
					"internalType": "uint8",
					"name": "",
					"type": "uint8"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	]
}